import std

aws_regions = [
    "af-south-1",
    "ap-east-1",
    "ap-northeast-1",
    "ap-northeast-2",
    "ap-northeast-3",
    "ap-south-1",
    "ap-south-2",
    "ap-southeast-1",
    "ap-southeast-2",
    "ap-southeast-3",
    "ap-southeast-4",
    "ca-central-1",
    "eu-central-1",
    "eu-central-2",
    "eu-north-1",
    "eu-south-1",
    "eu-south-2",
    "eu-west-1",
    "eu-west-2",
    "eu-west-3",
    "il-central-1",
    "me-central-1",
    "me-south-1",
    "sa-east-1",
    "us-gov-east-1",
    "us-gov-west-1",
    "us-east-1",
    "us-east-2",
    "us-west-1",
    "us-west-2",
]

typedef AWSRegion str if self in aws_regions


resource IAMRole:
    name: str
    permissions: list[str]


resource EC2KeyPair:
    name: str
    public_key: str


# This is the actual VM
@index(["region", "name"])
resource EC2Instance:
    name: str
    region: AWSRegion
    key_pair: EC2KeyPair
    image_name: str
    instance_type: str

    promise public_ip: std.IPv4Address
    _test_ssh: bool

    def __init__(
        self,
        name: str,
        region: AWSRegion,
        key_pair: EC2KeyPair,
        image_name: str,
        instance_type: str,
        _test_ssh: bool = False,
    ):
        self.name = name
        self.region = region
        self.key_pair = key_pair
        self.image_name = validate_image(self.region, image_name)
        self.instance_type = validate_instance_type(self.region, instance_type)
        self._test_ssh = _test_ssh


@index(["_instance.region", "_instance.name"])
resource EC2InstanceHost:
    _instance: EC2Instance
    host: std.Host

    def __init__(
        self,
        name: str,
        region: AWSRegion,
        key_pair: EC2KeyPair,
        image_name: str,
        instance_type: str,
        username: str = "",
    ):
        self._instance = EC2Instance(
            name,
            region,
            key_pair,
            image_name,
            instance_type,
            _test_ssh=True,
        )

        self.host = std.Host(
            self._instance.public_ip,
            username = get_default_username(image_name, name, username),
        )
